#!/bin/bash

# ================================================
# SCRIPT DE DESPLIEGUE DEL SISTEMA RBAC
# ================================================

echo "üöÄ Iniciando despliegue del sistema RBAC..."

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci√≥n para mostrar pasos
step() {
    echo -e "${BLUE}üìã PASO $1: $2${NC}"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
    exit 1
}

# Verificar que estamos en el directorio correcto
if [ ! -f "package.json" ]; then
    error "Este script debe ejecutarse desde la ra√≠z del proyecto"
fi

step "1" "Verificando dependencias"
if ! command -v npm &> /dev/null; then
    error "npm no est√° instalado"
fi

success "npm encontrado"

step "2" "Instalando dependencias"
npm install || error "Error instalando dependencias"
success "Dependencias instaladas"

step "3" "Verificando migraci√≥n de base de datos"
echo "Por favor, ejecuta manualmente la migraci√≥n SQL en Supabase:"
echo "üìÅ Archivo: supabase/migrations/20250103_complete_rbac_system.sql"
echo ""
echo "¬øHas ejecutado la migraci√≥n de base de datos? (y/N)"
read -r response
if [[ ! "$response" =~ ^[Yy]$ ]]; then
    error "Ejecuta la migraci√≥n de base de datos primero"
fi

success "Migraci√≥n de base de datos confirmada"

step "4" "Compilando TypeScript"
npm run build 2>/dev/null || warning "Build fall√≥ - continuando con desarrollo"

step "5" "Verificando archivos cr√≠ticos"

# Verificar archivos principales
files=(
    "src/services/rbacService.ts"
    "src/hooks/usePermissions.ts"
    "src/components/auth/PermissionGuard.tsx"
    "src/features/settings/components/RolePermissionsManagement.tsx"
    "src/scripts/migrateToRbacSystem.ts"
    "supabase/migrations/20250103_complete_rbac_system.sql"
)

for file in "${files[@]}"; do
    if [ -f "$file" ]; then
        success "‚úì $file"
    else
        error "‚úó Archivo no encontrado: $file"
    fi
done

step "6" "Generando reporte de migraci√≥n"

cat << 'EOF' > RBAC_DEPLOYMENT_CHECKLIST.md
# üìã Checklist de Despliegue RBAC

## ‚úÖ Completado Autom√°ticamente
- [x] Dependencias instaladas
- [x] Archivos principales verificados
- [x] Compilaci√≥n TypeScript verificada

## üéØ Pasos Manuales Requeridos

### 1. Base de Datos (Supabase)
- [ ] Ejecutar migraci√≥n: `supabase/migrations/20250103_complete_rbac_system.sql`
- [ ] Verificar que las tablas se crearon: `permissions`, `role_permissions`
- [ ] Verificar que las funciones SQL funcionan

### 2. Migraci√≥n de Datos
```javascript
// En la consola del navegador (F12)
import { runMigrationFromConsole } from './src/scripts/migrateToRbacSystem';
await runMigrationFromConsole();
```

### 3. Validaci√≥n
```javascript
// En la consola del navegador
import { validateMigration } from './src/scripts/migrateToRbacSystem';
const result = await validateMigration();
console.log(result);
```

### 4. Testing de Roles
- [ ] Admin: Acceso completo
- [ ] Builder Admin: Solo Builder + Recibidos
- [ ] Viewer: Carteler√≠a sin auditor√≠a
- [ ] Viewer Audit: Carteler√≠a con auditor√≠a

### 5. Verificar Filtrado por Grupos
- [ ] Usuarios ven solo elementos de sus grupos
- [ ] Admins ven todos los elementos

## üîß Configuraci√≥n Post-Despliegue

1. **Asignar Roles a Usuarios Existentes**
   - Ir a Configuraci√≥n ‚Üí Roles y Permisos
   - Revisar y ajustar roles seg√∫n necesidades

2. **Configurar Permisos Personalizados**
   - Crear permisos adicionales si es necesario
   - Ajustar roles existentes

3. **Informar a Usuarios**
   - Comunicar cambios en el sistema
   - Proporcionar documentaci√≥n de nuevos permisos

## üö® Rollback (Si es necesario)
- El sistema anterior sigue funcionando
- Revertir cambios en los componentes actualizados
- Restaurar verificaciones de `userRole`
EOF

success "Checklist generado: RBAC_DEPLOYMENT_CHECKLIST.md"

step "7" "Resumen final"

echo ""
echo "üéâ ¬°DESPLIEGUE RBAC COMPLETADO!"
echo ""
echo "üìÅ Archivos importantes:"
echo "   ‚Ä¢ RBAC_MIGRATION_GUIDE.md - Documentaci√≥n completa"
echo "   ‚Ä¢ RBAC_DEPLOYMENT_CHECKLIST.md - Pasos manuales pendientes"
echo ""
echo "üéØ Pr√≥ximos pasos:"
echo "   1. Ejecutar migraci√≥n SQL en Supabase"
echo "   2. Ejecutar script de migraci√≥n de datos en consola"
echo "   3. Validar migraci√≥n"
echo "   4. Probar funcionalidades con diferentes roles"
echo ""
echo "üìö Para m√°s informaci√≥n, consulta: RBAC_MIGRATION_GUIDE.md"

success "¬°Sistema RBAC listo para usar!"
